function nodes = T(n, left_board, right_board) % последние два аргумента обозначают отрезок, на который нужно спроецировать корни многочлена Чебышева
% возвращает n узлов, по которым нужно интерполировать
% n - степень многочлена Чебышева
% тут количество узлов = n
nodes = zeros(1, n);
% в nodes будут лежать нули многочлена Чебышева (их n штук, они лежат на [-1, 1]), нам надо еще
% расположить их на своем отрезке, для этого мы найдем middle
middle = (right_board - left_board) / 2.0; % коэффициент, на который домножим все нули
% получим корни на отрезке [-middle, middle], 2middle = длине нашего
% отрезка, на котором будем интерполировать
% надо еще подвинуть отрезок [-middle, middle] так, чтобы он совпал с
% нашим отрезком интерполирования [left_board, right_board]
% к каждому корню нужно прибавить right_board - middle, так как отрезки
% [-middle, middle] и [left_board, right_board] совпадают по длине
% 1)если они прямо совпали, мы прибавим ноль
% 2) если отрезок [left_board, right_board] правее [-middle, middle], то 
% right_board - middle = положительному числу, и мы сдвинем все корни
% вправо на нужну величину
% 3) если наоборот, то right_board - middle = отрицательному числу, и мы
% сдвинем все корни влево
index = 1;
for k = 0:(n-1) % n уже не надо, так как период cos = pi
    nodes(index) = middle*cos((0.5+k)*pi/n) + right_board - middle;
    index = index+1;
end
end



    
